margin = margin(10, 0, 10, 0)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + theme(plot.title = element_text(size=20, face="bold",
margin = margin(10, 10, 10, 0)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + theme(plot.title = element_text(size=20, face="bold",
margin = margin(10, 100, 10, 0)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + theme(plot.title = element_text(size=20, face="bold",
margin = margin(10, 0, 10, 0)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + theme(legend.position="bottom", legend.box = "horizontal") + labs(subtitle="Legend at Bottom")
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + legend("bottomright", inset = 0.01, legend=paste0("AUC: ", auc_1), cex=1, box.lty=0)
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM"); legend("bottomright", inset = 0.01, legend=paste0("AUC: ", auc_1), cex=1, box.lty=0)
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM"); legend("bottomright", inset = 0.01, legend=paste0("AUC: ", auc_1), cex=1, box.lty=0)
par(mfrow = c(1, 4))
plot(glm_roc_curve) + ggtitle("GLM"); legend("bottomright", inset = 0.01, legend=paste0("AUC: ", auc_1), cex=1, box.lty=0)
par(mfrow = c(1, 4))
plot(glm_roc_curve); legend("bottomright", inset = 0.01, legend=paste0("AUC: ", auc_1), cex=1, box.lty=0)
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + theme(legend.position="bottom", legend.box = "horizontal") + labs(subtitle="Legend at Bottom")
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + theme(legend.position="bottom", legend.box = "horizontal") + labs(subtitle=paste0("AUC: ", auc_1) )
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + theme(legend.position="bottom", legend.box = "horizontal") + labs(subtitle=paste0("AUC: ", auc_glm))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + theme(legend.position="bottom", legend.box = "horizontal") + labs(subtitle=paste0("AUC: ", auc_glm$.estimate))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + theme(legend.position="bottom", legend.box = "horizontal") + labs(subtitle=paste0("AUC: ", auc_glm$.estimate))
autoplot(glm_roc_curve) + ggtitle("GLM") + theme(legend.position="bottom", legend.box = "horizontal") + labs(subtitle=paste0("AUC: ", auc_glm$.estimate))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + theme(legend.position="bottom", legend.box = "horizontal") + labs(subtitle=paste0("AUC: ", auc_glm$.estimate))
autoplot(glm_roc_curve) + ggtitle("GLM") + theme(legend.position="bottom", legend.box = "horizontal") + labs(subtitle=paste0("AUC: ", auc_glm$.estimate))
library(grid)
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + grid.text("lalala", x=0.7,  y=0.8, gp=gpar(col="firebrick", fontsize=14, fontface="bold"))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text("lalala", x=0.7,  y=0.8, gp=gpar(col="firebrick", fontsize=14, fontface="bold")))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text("lalala", x=0.7,  y=0.8, gp=gpar(fontsize=14, fontface="bold")))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text("lalala", x=0.7,  y=0.8, gp=gpar(fontsize=14)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text("lalala", x=1,  y=0.8, gp=gpar(fontsize=14)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text("lalala", x=0.5,  y=0.8, gp=gpar(fontsize=14)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text("lalala", x=0.8,  y=0.8, gp=gpar(fontsize=14)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text("lalala", x=0.8,  y=0.1, gp=gpar(fontsize=14)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", auc_glm$.estimate), x=0.8,  y=0.1, gp=gpar(fontsize=14)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3), x=0.8,  y=0.1, gp=gpar(fontsize=14)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.1, gp=gpar(fontsize=14)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.9,  y=0.1, gp=gpar(fontsize=14)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.85,  y=0.1, gp=gpar(fontsize=14)))
par(mfrow = c(1, 4))
autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.85,  y=0.05, gp=gpar(fontsize=14)))
library(gridExtra)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.85,  y=0.05, gp=gpar(fontsize=14)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.85,  y=0.05, gp=gpar(fontsize=14)))
grid.arrange(plot1, plot2, ncol=2)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=14)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=14)))
grid.arrange(plot1, plot2, ncol=2)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
grid.arrange(plot1, plot2, ncol=2)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot3 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot4 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot5 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=5)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot3 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot4 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot5 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=2)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot3 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot4 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot5 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=5)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot3 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot4 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot5 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=5)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot3 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot4 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot5 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=2)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot3 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot4 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot5 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=3)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot3 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot4 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot5 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=4)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot3 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot4 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot5 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=2)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot3 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot4 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
plot5 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=10)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=3)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot2 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot3 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot4 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot5 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=3)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot2 <- autoplot(rf_roc_curve) + ggtitle("Random Forest") + annotation_custom(grid.text(paste0("AUC: ", round(auc_rf$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot3 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot4 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot5 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=3)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot2 <- autoplot(rf_roc_curve) + ggtitle("Random Forest") + annotation_custom(grid.text(paste0("AUC: ", round(auc_rf$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot3 <- autoplot(xgb_roc_curve) + ggtitle("XgBoost") + annotation_custom(grid.text(paste0("AUC: ", round(auc_xgb$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot4 <- autoplot(gbm_roc_curve) + ggtitle("GBM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_gbm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot5 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=3)
## mlp
auc_mlp <- estimates_keras_tbl %>% roc_auc(truth, class_prob)
keras_roc_curve <- estimates_keras_tbl %>% roc_curve(truth, class_prob)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot2 <- autoplot(rf_roc_curve) + ggtitle("Random Forest") + annotation_custom(grid.text(paste0("AUC: ", round(auc_rf$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot3 <- autoplot(xgb_roc_curve) + ggtitle("XgBoost") + annotation_custom(grid.text(paste0("AUC: ", round(auc_xgb$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot4 <- autoplot(gbm_roc_curve) + ggtitle("GBM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_gbm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot5 <- autoplot(keras_roc_curve) + ggtitle("MLP") + annotation_custom(grid.text(paste0("AUC: ", round(auc_mlp$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=3)
genderForest_2
modelCompared <- resamples(list("GLM" = genderRFE, "Random Forest" = genderForest_2, "Xgboost" = genderXgboost_2, "GBM" = genderGBM_2))
bwplot(modelCompared, layout = c(3, 1))
summary(modelCompared)
modelCompared <- resamples(list("GLM" = conf_4, "Random Forest" = genderForest_2, "Xgboost" = genderXgboost_2, "GBM" = genderGBM_2))
modelCompared <- resamples(list("GLM" = genderRFE, "Random Forest" = genderForest_2, "Xgboost" = genderXgboost_2, "GBM" = genderGBM_2))
bwplot(modelCompared, layout = c(3, 1))
resamples(list("GLM" = genderRFE, "Random Forest" = genderForest_2, "Xgboost" = genderXgboost_2, "GBM" = genderGBM_2))
GLM
genderRFE
explainer <- lime::lime(
x              = x_train,
model          = model_keras,
bin_continuous = FALSE
)
explanation <- lime::explain(
x_test[1:10,],
explainer    = explainer,
n_labels     = 1,
n_features   = 5,
kernel_width = 0.5
)
plot_explanations(explanation) +
labs(title = "LIME Feature Importance Heatmap",
subtitle = "Hold Out (Test) Set, First 10 Cases Shown")
model_type.keras.models.Sequential <- function(x, ...) {
"classification"
}
predict_model.keras.models.Sequential <- function(x, newdata, type, ...) {
pred <- predict_proba(object = x, x = as.matrix(newdata))
data.frame(Yes = pred, No = 1 - pred)
}
x_test
explainer <- lime::lime(
x              = x_train,
model          = model_keras,
bin_continuous = FALSE
)
explanation <- lime::explain(
x_test[1:10,],
explainer    = explainer,
n_labels     = 1,
n_features   = 5,
kernel_width = 0.5
)
plot_explanations(explanation) +
labs(title = "LIME Feature Importance Heatmap",
subtitle = "Hold Out (Test) Set, First 10 Cases Shown")
explanation <- lime::explain(
x_test[1:30,],
explainer    = explainer,
n_labels     = 1,
n_features   = 5,
kernel_width = 0.5
)
plot_explanations(explanation) +
labs(title = "LIME Feature Importance Heatmap",
subtitle = "Hold Out (Test) Set, First 10 Cases Shown")
explanation <- lime::explain(
x_test[1:100,],
explainer    = explainer,
n_labels     = 1,
n_features   = 5,
kernel_width = 0.5
)
plot_explanations(explanation) +
labs(title = "LIME Feature Importance Heatmap",
subtitle = "Hold Out (Test) Set, First 10 Cases Shown. Yes = Female, ")
plot_explanations(explanation) +
labs(title = "LIME Feature Importance Heatmap",
subtitle = "Hold Out (Test) Set, First 100 Cases Shown")
corrr_analysis %>%
ggplot(aes(x = label, y = fct_reorder(feature, desc(label)))) +
geom_point() +
# Positive Correlations - Contribute to male
geom_segment(aes(xend = 0, yend = feature),
color = palette_light()[[2]],
data = corrr_analysis %>% filter(label > 0)) +
geom_point(color = palette_light()[[2]],
data = corrr_analysis %>% filter(label > 0)) +
# Negative Correlations - contribute to female
geom_segment(aes(xend = 0, yend = feature),
color = palette_light()[[1]],
data = corrr_analysis %>% filter(label < 0)) +
geom_point(color = palette_light()[[1]],
data = corrr_analysis %>% filter(label < 0)) +
# Vertical lines
geom_vline(xintercept = 0, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = -0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = 0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
# Aesthetics
theme_tq() +
labs(title = "Gender Correlation Analysis",
subtitle = paste("Positive Correlations (contribute to male),",
"Negative Correlations (contribute to female)"),
y = "Feature Importance")
corrr_analysis <- x_train %>%
mutate(label = y_train_vec) %>%
correlate() %>%
focus(label) %>%
rename(feature = rowname) %>%
arrange(abs(label)) %>%
mutate(feature = as_factor(feature))
corrr_analysis
corrr_analysis %>%
ggplot(aes(x = label, y = fct_reorder(feature, desc(label)))) +
geom_point() +
# Positive Correlations - Contribute to male
geom_segment(aes(xend = 0, yend = feature),
color = palette_light()[[2]],
data = corrr_analysis %>% filter(label > 0)) +
geom_point(color = palette_light()[[2]],
data = corrr_analysis %>% filter(label > 0)) +
# Negative Correlations - contribute to female
geom_segment(aes(xend = 0, yend = feature),
color = palette_light()[[1]],
data = corrr_analysis %>% filter(label < 0)) +
geom_point(color = palette_light()[[1]],
data = corrr_analysis %>% filter(label < 0)) +
# Vertical lines
geom_vline(xintercept = 0, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = -0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = 0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
# Aesthetics
theme_tq() +
labs(title = "Gender Correlation Analysis",
subtitle = paste("Positive Correlations (contribute to female),",
"Negative Correlations (contribute to male)"),
y = "Feature Importance")
voice
data
table(data$label)
glm_table <- table(output_results$GLM, output_results$label)
gbm_table <- table(output_results$GBM, output_results$label)
rf_table <- table(output_results$RandomForest, output_results$label)
xgb_table <- table(output_results$Xgboost, output_results$label)
confusionMatrix(glm_table)
glimpse(output_results)
confusionMatrix(gbm_table)
confusionMatrix(rf_table)
confusionMatrix(xgb_table)
confusionMatrix(gbm_table)
options(yardstick.event_first = FALSE)
estimates_res <- tibble(
truth      = as.factor(y_output_vec) %>% fct_recode(yes = "1", no = "0"),
estimate   = as.factor(pred_class) %>% fct_recode(yes = "1", no = "0"),
class_prob = pred_prob
)
estimates_res %>% metrics(truth, estimate)
precision(glm_table)
roc_auc(glm_table)
precision(glm_table)
precision(gbm_table)
precision(rf_table)
precision(xgb_table)
precision(gbm_table)
estimates_res %>% yardstick::precision(truth, estimate)
recall(glm_table)
recall(gbm_table)
recall(rf_table)
recall(xgb_table)
estimates_res %>% yardstick::recall(truth, estimate)
soundTest_1
output_results
acoustics_imp
soundTest_1
acoustics_imp_w_label <- cbind(acoustics_imp, acoustics %>% select(label))
acoustics_imp_w_label <- cbind(acoustics_imp, acoustics %>% select(label))
label <- output %>% select(label)
acoustics_imp_w_label <- cbind(acoustics_imp, label)
acoustics_imp_w_label
predictedGender_glm <- as.data.frame(predict(genderRFE, newdata = acoustics_imp_w_label, type = "prob")$female)
predictedGender_glm
glm_pred_df <- cbind(label_truth, predictedGender_glm)
glm_pred_df <- cbind(label, predictedGender_glm)
colnames(glm_pred_df) <- c("truth", "class_prob")
glm_pred_df <- glm_pred_df %>% mutate(truth = truth %>% as.factor())
auc_glm <- roc_auc(glm_pred_df, truth, class_prob)
auc_glm
glm_pred_df
class_prob
glm_pred_df
label
glm_roc_curve <- roc_curve(glm_pred_df, truth, class_prob)
autoplot(glm_roc_curve)
predictedGender_rf <- as.data.frame(predict(genderForest_2, newdata = acoustics_imp_w_label, type = "prob")$female)
rf_pred_df <- cbind(label, predictedGender_rf)
colnames(rf_pred_df) <- c("truth", "class_prob")
rf_pred_df <- rf_pred_df %>% mutate(truth = truth %>% as.factor())
auc_rf <- roc_auc(rf_pred_df, truth, class_prob)
rf_roc_curve <- roc_curve(rf_pred_df, truth, class_prob)
autoplot(rf_roc_curve)
auc_rf
predictedGender_glm <- as.data.frame(predict(genderRFE, newdata = acoustics_imp_w_label, type = "prob")$female)
glm_pred_df <- cbind(label, predictedGender_glm)
colnames(glm_pred_df) <- c("truth", "class_prob")
glm_pred_df <- glm_pred_df %>% mutate(truth = truth %>% as.factor())
auc_glm <- roc_auc(glm_pred_df, truth, class_prob)
glm_roc_curve <- roc_curve(glm_pred_df, truth, class_prob)
autoplot(glm_roc_curve)
auc_glm
confusionMatrix(glm_table)
predictedGender_glm
glm_pred_df
confusionMatrix(glm_table)
confusionMatrix(rf_table)
predictedGender_rf <- as.data.frame(predict(genderForest_2, newdata = acoustics_imp_w_label, type = "prob")$female)
rf_pred_df <- cbind(label, predictedGender_rf)
colnames(rf_pred_df) <- c("truth", "class_prob")
rf_pred_df <- rf_pred_df %>% mutate(truth = truth %>% as.factor())
auc_rf <- roc_auc(rf_pred_df, truth, class_prob)
rf_roc_curve <- roc_curve(rf_pred_df, truth, class_prob)
autoplot(rf_roc_curve)
predictedGender_xgb <- as.data.frame(predict(genderXgboost_2, newdata = acoustics_imp_w_label, type = "prob")$female)
xgb_pred_df <- cbind(label, predictedGender_xgb)
colnames(xgb_pred_df) <- c("truth", "class_prob")
xgb_pred_df <- xgb_pred_df %>% mutate(truth = truth %>% as.factor())
auc_xgb <- roc_auc(xgb_pred_df, truth, class_prob)
xgb_roc_curve <- roc_curve(xgb_pred_df, truth, class_prob)
autoplot(xgb_roc_curve)
confusionMatrix(xgb_table)
predictedGender_gbm <- as.data.frame(predict(genderGBM_2, newdata = soundTest_1, type = "prob")$female)
gbm_pred_df <- cbind(label_truth, predictedGender_gbm)
colnames(gbm_pred_df) <- c("truth", "class_prob")
gbm_pred_df <- gbm_pred_df %>% mutate(truth = truth %>% as.factor())
auc_gbm <- roc_auc(gbm_pred_df, truth, class_prob)
gbm_roc_curve <- roc_curve(gbm_pred_df, truth, class_prob)
autoplot(gbm_roc_curve)
predictedGender_gbm <- as.data.frame(predict(genderGBM_2, newdata = acoustics_imp_w_label, type = "prob")$female)
gbm_pred_df <- cbind(label, predictedGender_gbm)
colnames(gbm_pred_df) <- c("truth", "class_prob")
gbm_pred_df <- gbm_pred_df %>% mutate(truth = truth %>% as.factor())
auc_gbm <- roc_auc(gbm_pred_df, truth, class_prob)
gbm_roc_curve <- roc_curve(gbm_pred_df, truth, class_prob)
autoplot(gbm_roc_curve)
auc_mlp <- estimates_res %>% roc_auc(truth, class_prob)
mlp_roc_curve <- estimates_res %>% roc_curve(truth, class_prob)
autoplot(mlp_roc_curve)
auc_mlp
estimates_res %>% metrics(truth, estimate)
plot1 <- autoplot(glm_roc_curve) + ggtitle("GLM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_glm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot2 <- autoplot(rf_roc_curve) + ggtitle("Random Forest") + annotation_custom(grid.text(paste0("AUC: ", round(auc_rf$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot3 <- autoplot(xgb_roc_curve) + ggtitle("XgBoost") + annotation_custom(grid.text(paste0("AUC: ", round(auc_xgb$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot4 <- autoplot(gbm_roc_curve) + ggtitle("GBM") + annotation_custom(grid.text(paste0("AUC: ", round(auc_gbm$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
plot5 <- autoplot(mlp_roc_curve) + ggtitle("MLP") + annotation_custom(grid.text(paste0("AUC: ", round(auc_mlp$.estimate, digits = 3)), x=0.8,  y=0.05, gp=gpar(fontsize=8)))
grid.arrange(plot1, plot2, plot3, plot4, plot5, ncol=3)
pred_class
confusionMatrix(pred_class, y_output_vec)
y_output_vec
table(pred_class, y_output_vec)
auc_mlp
auc_rf
auc_xgb
auc_gbm
auc_rf
auc_glm
model_type.keras.models.Sequential <- function(x, ...) {
"classification"
}
predict_model.keras.models.Sequential <- function(x, newdata, type, ...) {
pred <- predict_proba(object = x, x = as.matrix(newdata))
data.frame(Yes = pred, No = 1 - pred)
}
explainer <- lime::lime(
x              = x_output,
model          = model_keras,
bin_continuous = FALSE
)
explanation <- lime::explain(
x_output[1:90,],
explainer    = explainer,
n_labels     = 1,
n_features   = 5,
kernel_width = 0.5
)
x_output
explanation
explainer
x_test
plot_explanations(explanation) +
labs(title = "LIME Feature Importance Heatmap",
subtitle = "Hold Out (Test) Set, First 10 Cases Shown")
plot_explanations(explanation) +
labs(title = "LIME Feature Importance Heatmap")
corrr_analysis <- x_train %>%
mutate(label = y_train_vec) %>%
correlate() %>%
focus(label) %>%
rename(feature = rowname) %>%
arrange(abs(label)) %>%
mutate(feature = as_factor(feature))
corrr_analysis
corrr_analysis %>%
ggplot(aes(x = label, y = fct_reorder(feature, desc(label)))) +
geom_point() +
# Positive Correlations - Contribute to male
geom_segment(aes(xend = 0, yend = feature),
color = palette_light()[[2]],
data = corrr_analysis %>% filter(label > 0)) +
geom_point(color = palette_light()[[2]],
data = corrr_analysis %>% filter(label > 0)) +
# Negative Correlations - contribute to female
geom_segment(aes(xend = 0, yend = feature),
color = palette_light()[[1]],
data = corrr_analysis %>% filter(label < 0)) +
geom_point(color = palette_light()[[1]],
data = corrr_analysis %>% filter(label < 0)) +
# Vertical lines
geom_vline(xintercept = 0, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = -0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = 0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
# Aesthetics
theme_tq() +
labs(title = "Gender Correlation Analysis",
subtitle = paste("Positive Correlations (contribute to Female),",
"Negative Correlations (contribute to Male)"),
y = "Feature Importance")
y_train_vec
y_output_vec
corrr_analysis <- x_output %>%
mutate(label = y_output_vec) %>%
correlate() %>%
focus(label) %>%
rename(feature = rowname) %>%
arrange(abs(label)) %>%
mutate(feature = as_factor(feature))
corrr_analysis
corrr_analysis %>%
ggplot(aes(x = label, y = fct_reorder(feature, desc(label)))) +
geom_point() +
# Positive Correlations - Contribute to male
geom_segment(aes(xend = 0, yend = feature),
color = palette_light()[[2]],
data = corrr_analysis %>% filter(label > 0)) +
geom_point(color = palette_light()[[2]],
data = corrr_analysis %>% filter(label > 0)) +
# Negative Correlations - contribute to female
geom_segment(aes(xend = 0, yend = feature),
color = palette_light()[[1]],
data = corrr_analysis %>% filter(label < 0)) +
geom_point(color = palette_light()[[1]],
data = corrr_analysis %>% filter(label < 0)) +
# Vertical lines
geom_vline(xintercept = 0, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = -0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
geom_vline(xintercept = 0.25, color = palette_light()[[5]], size = 1, linetype = 2) +
# Aesthetics
theme_tq() +
labs(title = "Gender Correlation Analysis",
subtitle = paste("Positive Correlations (contribute to Female),",
"Negative Correlations (contribute to Male)"),
y = "Feature Importance")
output
output_results
new_output
table(new_output$label)
